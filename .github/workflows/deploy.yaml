name: Deploy example

on:
  # Runs on pushes targeting the main branch
  push:
    branches: ["main"]
    paths:
      - 'example/**'
      - 'src/**'
      - 'index.ts'
      
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      # System Setup
      - name: Checkout 🔄
        uses: actions/checkout@v3
        with:
          fetch-tags: true
      - name: Get Last Version-Tag 🏷️
        run: echo "RELEASE_VERSION=`git describe --tags --abbrev=0 --match="v[0-9]*\.[0-9]*\.[0-9]*" HEAD  | cut -c 2-`-dev" >> $GITHUB_ENV
      - name: Setup Node 🟩
        uses: actions/setup-node@v3
        with: 
          working-directory: example
      - name: Setup Deno 🦕
        uses: denoland/setup-deno@v1
        with:
          deno-version: vx.x.x
      - name: Setup Pages 📄
        uses: actions/configure-pages@v3
      # Build  
      - name: Build package 🏗️
        run: deno run -A tasks/build-npm.ts $RELEASE_VERSION
      - name: Install dependencies 📦
        run: npm install
        working-directory: example
      - name: Build with Next.js 🏗️
        run: npm run build
        working-directory: example
      - name: Upload pages artifact 📤
        uses: actions/upload-pages-artifact@v1
        with:
          path: ./example/out
      - name: Deploy to GitHub Pages 🚀
        id: deployment
        uses: actions/deploy-pages@v2